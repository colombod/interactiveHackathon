#!csharp

#!connect signalr --kernel-name pi-top --hub-url http://pitop-jon.ngrok.io/kernelHub

#!csharp

#!pi-top
#r "nuget:Hackathon2020.BarcodeScanner"
using BarcodeScanner;
using BarcodeScanner.Spoonacular;
using Newtonsoft.Json;
using System.Linq;
using System.IO;

#!csharp

#!pi-top
Formatter<FileInfo>.Register((f, writer) => writer.WriteLine(f.FullName));
Formatter<DirectoryInfo>.Register((f, writer) => writer.WriteLine(f.FullName));

#!csharp

#!pi-top
var dir = new DirectoryInfo(@"/home/pi/dev/interactivehackathon/data");
var dataFiles = dir.GetFiles(Path.Combine("*.json"));
dataFiles.Select(f => f.Name)

#!csharp

#!pi-top
var data = dataFiles.Select(f => JsonConvert.DeserializeObject<FoodData>(File.ReadAllText(f.FullName)));

#!csharp

#!pi-top
data

#!csharp

#!pi-top
using XPlot.Plotly;

var foodsByDate = data
    .Where(d => d.ExpirationDate != default)
    .OrderBy(a => a.ExpirationDate)
    .ToArray();

var foods = new Graph.Scatter
{
    name = "Foods",
    x = foodsByDate.Select(a => a.ExpirationDate?.Date),
    y = foodsByDate.Select(a => a.Classification.Category),
    mode = "markers",
    marker = new Graph.Marker
    {  
        color = "rgb(30, 100, 180)",
        size = 18
    }
};

var layout = new Layout.Layout
{
    xaxis = new Graph.Xaxis 
    {
        ticktext = foodsByDate.Select(a => a.ExpirationDate?.Date.ToShortDateString()),
        tickmode = "array",
        tickvals = foodsByDate.Select(a => a.ExpirationDate?.Date),
        title = "Expires"
    }
};

var plot = Chart.Plot(new Graph.Scatter[] { foods } );
plot.WithLayout(layout);
plot.WithTitle("What should we eat first?");
plot
